# Generated by Django 2.0.7 on 2020-01-18 19:38

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('private_key', models.BinaryField(blank=True, default=b'-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAr9nT3fPg5xWyF9w+X+Pc2junbhuzppPsNEEj2zTOIXJsU6ar\nbFuZgpZYRh9UIwq8ee0PMPf+QoxQaFyG/A3Idkt6AtIK6/Eoc4Eqjl91fhKApzp4\nMXygWdSTr6hAGRKprSH99dh1faRghdqKo9ngk687GGzH4StqZdjHOGEGQ6CHcPjX\nFakoQoNz+6fNZ2jDwiH2Xz+c4faaX954RbKdBf6X/Rm10i6WNKSF7rusYtSkfeag\nOc6I/8CEghSQ+7AcESDmccMcQVX88RGCQBrvwhQtDBszOqYA7SwKiKwbIMl8BDic\nhJSSWMl70Axw92qHPL7DHFQpP7h1jjtW9Aoe9QIDAQABAoIBAQCC3HT/3LbnAIwx\nmWKJdUYq2O210MOWGMpT8I3AWMF0vnPCpGs5DcllFoDGXhX8pcawbSs647HA0C4e\nG40QESm2bmBzrN8XybSyj9KddIg4s4gt6iL7oKSrdLgapfhdMDg4cO1OgDCeuS5j\nLciyOjcXb/VoLbto4yggdnt6hylkNNrsCta3TvXGZXAP+MGxa/utDQ4E36ut9bcb\nIy/Py42RJP1ctgUuzuiJUKf+ys+lNejhRD+2OS6a3ADufZtZgXbPPNl7OZC+spUz\nEnl6u0ku5GtnfCH0TpM6vv2cIrMmzGPjjUj6ybqAEcLmiI31LzeGKLa7PNO3gp+p\nLehLYCIBAoGBAObb3Ef8IWumkE1pjnPfrC/im0HktQDFnF8YHgCgOOFbfFaBtvSG\nbzVoY7LZxMZ239ajxpLelsu5oj+DHeBQPQG/AByoGkBG9Fe65BddO6uuXgD6uzHM\nlHr4GtJLVEjfPDj8jIo1giBrz2y8fAA+KNyNSuJsnDJHIzSn/eZE2Q1BAoGBAMMA\nZP4ztu5lMe2GuaDdbNO9NswRki0X96W3ttXiU6YT9fxk/whdX6iQEinU9nyE4v+j\nnMF+UbfbSOdu0dpCCvgNAmRaaiHicu0QQmlArjfwqPa6Ct4fO/hcQOPxdcQeF1Ig\nc87+YPRo2tes8lWAx7x7seru1iG32VbMvfO848C1AoGBAOJwIN7SpY1LsRrdQIbT\ni7bkVFkLlaaOLdTweO0wOtqAu7K2RNgPzKDcJX5WL7Zi/ycvOSTyA4MML+KQHwvY\naB6AVAHHuQf3EM/EVtm77z10KGxZgqdT/Qeot9YxYRihLhbPUKJ33Y0jci87qX0r\nezTpudvhoEuIjzWk2Vu1iBiBAoGACKlY0w26/2XRTOqiDionrlQGPhQ9uPEKl/rM\nDT4LVyIl1/sodNeo6xTTKbaC6E8CwjYjPVj+CjucRmNewOIUGKaDR6/YbP7g+fSx\n7njoBCYVazgiSXF7uXFnlHhiMb7gbE5ytmwIJHMP3WqaLQAWXyHjajsHmeHPrpJT\nkaL/Ps0CgYBxjfr3Kv0m6jdJP3W7K6nwTaZjN+MxhEalelxk6Bx6Kua7bCQuiPOJ\nejKQiSy5CfT2/g8mkB5m+B6u4jsdjpSRm8kyVJ0EVHRhok1AJC+E5i1D/dsxBpzU\nly/EtQWotHg9XqNJF83lUtN7BuROWan6N4v7mT7gDuefSAQqDo4Wcw==\n-----END RSA PRIVATE KEY-----\n', unique=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=300, null=True)),
                ('contain', models.BinaryField(blank=True, null=True)),
                ('was_verify', models.BooleanField(default=False)),
                ('is_correct', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Key',
            fields=[
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('public_key', models.BinaryField(unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='permission',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='message',
            name='user_from',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='sender', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='message',
            name='user_to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='reciver', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='permission',
            name='user_key',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Key'),
        ),
    ]
